diff --git a/gfx/wr/swgl/src/vector_type.h b/gfx/wr/swgl/src/vector_type.h
--- a/gfx/wr/swgl/src/vector_type.h
+++ b/gfx/wr/swgl/src/vector_type.h
@@ -238,27 +238,27 @@
   VectorType& operator%=(int x) {
     data %= x;
     return *this;
   }
 
-  VectorType<mask_type, N> operator==(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data == x.data);
+  VectorType<mask_index, N> operator==(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data == x.data);
   }
-  VectorType<mask_type, N> operator!=(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data != x.data);
+  VectorType<mask_index, N> operator!=(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data != x.data);
   }
-  VectorType<mask_type, N> operator<(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data < x.data);
+  VectorType<mask_index, N> operator<(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data < x.data);
   }
-  VectorType<mask_type, N> operator>(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data > x.data);
+  VectorType<mask_index, N> operator>(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data > x.data);
   }
-  VectorType<mask_type, N> operator<=(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data <= x.data);
+  VectorType<mask_index, N> operator<=(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data <= x.data);
   }
-  VectorType<mask_type, N> operator>=(VectorType x) const {
-    return VectorType<mask_type, N>::wrap(data >= x.data);
+  VectorType<mask_index, N> operator>=(VectorType x) const {
+    return VectorType<mask_index, N>::wrap(data >= x.data);
   }
 
   VectorType operator!() const { return wrap(!data); }
   VectorType operator&&(VectorType x) const { return wrap(data & x.data); }
   VectorType operator||(VectorType x) const { return wrap(data | x.data); }

